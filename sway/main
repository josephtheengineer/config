#                                ██   ██
#   ██████ ███     ██  ██████   ░░██ ██
#  ██░░░░ ░░██  █ ░██ ░░░░░░██   ░░███
# ░░█████  ░██ ███░██  ███████    ░██
#  ░░░░░██ ░████░████ ██░░░░██    ██
#  ██████  ███░ ░░░██░░████████  ██
# ░░░░░░  ░░░    ░░░  ░░░░░░░░  ░░

# ~/.config/sway/config
# man 5 sway

### Variables
#
#set ~/var/lib ~/local/lib
# Logo key
set $mod Super_L
# Home row direction keys
set $left h
set $down j
set $up k
set $right l
#
set $term kitty
# Note: it's recommended that you pass the final command to sway
#set $menu dmenu_path | dmenu | xargs swaymsg exec
set $menu rofi -show drun -display-drun "SYSTEM:" | xargs swaymsg exec
#
set $fg #3c4a43
set $bg #00000000

### Output configuration
#
output * bg ~/.background-image fill
#output * bg /mnt/media/pictures/kaspersky\ v3.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
          timeout 1000 'swaylock -f -c 000000c8' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "*" {
	xkb_layout "us"
	xkb_variant "colemak"
	tap enabled
}

### Decorations
gaps inner 20
gaps top -20
#
font pango:Noto Mono for Powerline 6
#
#                       border    background text      indicator child-border
client.focused          $bg       $bg        $fg       $fg       $fg
client.focused_inactive $bg       $bg        $fg       $bg       $bg
client.unfocused        $bg       $bg        $fg       $bg       $bg
client.urgent           #555555   $bg        $fg       $fg       $fg
#
default_border normal 1

### Key bindings
#
# Basics:
#
	# start a terminal
	bindsym Return exec $term

	# kill focused window
	bindsym Shift+q kill

	# start your launcher
	mode "launch" {
		bindsym Escape mode "default"; exec pkill rofi
		bindsym --release Return mode "default"
	}
	bindsym space mode "launch"; exec $menu

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	#floating_modifier $mod normal

	# reload the configuration file
	bindsym Shift+c exec ~/var/lib/scripts/setup.sh; reload

	# exit sway (logs you out of your Wayland session)
	bindsym Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $left focus left
    bindsym $down focus down
    bindsym $up focus up
    bindsym $right focus right
    # or use $mod+[up|down|left|right]
    bindsym Left focus left
    bindsym Down focus down
    bindsym Up focus up
    bindsym Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym Shift+$left move left
    bindsym Shift+$down move down
    bindsym Shift+$up move up
    bindsym Shift+$right move right
    # ditto, with arrow keys
    bindsym Shift+Left move left
    bindsym Shift+Down move down
    bindsym Shift+Up move up
    bindsym Shift+Right move right
#
# Workspaces:
#

    workspace 1 output $display1
    workspace 2 output $display1
    workspace 3 output $display1
    workspace 4 output $display1
    workspace 5 output $display1
    workspace 6 output $display1
    workspace 7 output $display1
    workspace 8 output $display1
    workspace 9 output $display1
    workspace 10 output $display1

    workspace 1:F1 output $display2
    workspace 2:F2 output $display2
    workspace 3:F3 output $display2
    workspace 4:F4 output $display2
    workspace 5:F5 output $display2
    workspace 6:F6 output $display2
    workspace 7:F7 output $display2
    workspace 8:F8 output $display2
    workspace 9:F9 output $display2
    workspace 10:F10 output $display2
    workspace 11:F11 output $display2
    workspace 12:F12 output $display2

    # switch to workspace
    bindsym 1 exec ~/var/lib/scripts/workspace-manager.sh switch 1
    bindsym 2 exec ~/var/lib/scripts/workspace-manager.sh switch 2
    bindsym 3 exec ~/var/lib/scripts/workspace-manager.sh switch 3
    bindsym 4 exec ~/var/lib/scripts/workspace-manager.sh switch 4
    bindsym 5 exec ~/var/lib/scripts/workspace-manager.sh switch 5
    bindsym 6 exec ~/var/lib/scripts/workspace-manager.sh switch 6
    bindsym 7 exec ~/var/lib/scripts/workspace-manager.sh switch 7
    bindsym 8 exec ~/var/lib/scripts/workspace-manager.sh switch 8
    bindsym 9 exec ~/var/lib/scripts/workspace-manager.sh switch 9
    bindsym 0 exec ~/var/lib/scripts/workspace-manager.sh switch 10

    bindsym F1 exec ~/var/lib/scripts/workspace-manager.sh switch 1:F1
    bindsym F2 exec ~/var/lib/scripts/workspace-manager.sh switch 2:F2
    bindsym F3 exec ~/var/lib/scripts/workspace-manager.sh switch 3:F3
    bindsym F4 exec ~/var/lib/scripts/workspace-manager.sh switch 4:F4
    bindsym F5 exec ~/var/lib/scripts/workspace-manager.sh switch 5:F5
    bindsym F6 exec ~/var/lib/scripts/workspace-manager.sh switch 6:F6
    bindsym F7 exec ~/var/lib/scripts/workspace-manager.sh switch 7:F7
    bindsym F8 exec ~/var/lib/scripts/workspace-manager.sh switch 8:F8
    bindsym F9 exec ~/var/lib/scripts/workspace-manager.sh switch 9:F9
    bindsym F10 exec ~/var/lib/scripts/workspace-manager.sh switch 10:F10
    bindsym F11 exec ~/var/lib/scripts/workspace-manager.sh switch 11:F11
    bindsym F12 exec ~/var/lib/scripts/workspace-manager.sh switch 12:F12


    # move focused container to workspace
    bindsym Shift+1 move container to workspace 1
    bindsym Shift+2 move container to workspace 2
    bindsym Shift+3 move container to workspace 3
    bindsym Shift+4 move container to workspace 4
    bindsym Shift+5 move container to workspace 5
    bindsym Shift+6 move container to workspace 6
    bindsym Shift+7 move container to workspace 7
    bindsym Shift+8 move container to workspace 8
    bindsym Shift+9 move container to workspace 9
    bindsym Shift+0 move container to workspace 10

    bindsym Shift+F1 move container to workspace 1:F1
    bindsym Shift+F2 move container to workspace 2:F2
    bindsym Shift+F3 move container to workspace 3:F3
    bindsym Shift+F4 move container to workspace 4:F4
    bindsym Shift+F5 move container to workspace 5:F5
    bindsym Shift+F6 move container to workspace 6:F6
    bindsym Shift+F7 move container to workspace 7:F7
    bindsym Shift+F8 move container to workspace 8:F8
    bindsym Shift+F9 move container to workspace 9:F9
    bindsym Shift+F10 move container to workspace 10:F10

    bindsym Shift+F11 move container to workspace 11:F11
    bindsym Shift+F12 move container to workspace 12:F12


    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym b splith
    bindsym v splitv

    # Switch the current container between different layout styles
    bindsym s layout stacking
    bindsym w layout tabbed
    bindsym e layout toggle split

    # Make the current focus fullscreen
    bindsym f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym d focus mode_toggle

    # move focus to the parent container
    bindsym a focus parent

	# gaps
  bindsym bracketleft exec killall conky; exec ~/var/lib/scripts/workspace-manager.sh set-mode left
  bindsym bracketright exec killall conky; exec ~/var/lib/scripts/workspace-manager.sh set-mode right

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym minus scratchpad show
#
# Modes:
#
mode "insert" {
	bindsym --release $mod mode "default"
}
bindsym --release $mod mode "insert"

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Escape mode "default"
    bindsym --release $mod mode "default"
}
bindsym r mode "resize"

mode "mail" {
    bindsym Escape mode "default"
}
bindsym m mode "mail"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom
    strip_workspace_numbers yes

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command ~/var/lib/scripts/status.sh

    colors {
        statusline #ffffff
        background #00000000
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 20 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym Ctrl+Right resize shrink width 5 px or 5 ppt
bindsym Ctrl+Up resize grow height 5 px or 5 ppt
bindsym Ctrl+Down resize shrink height 5 px or 5 ppt
bindsym Ctrl+Left resize grow width 5 px or 5 ppt

bindsym Print exec grim ~/desktop/screenshots/$(date +'%Y-%m-%d_%H:%M:%S').png

# --- Assignment to Workspace -- #
for_window [class="uplink"] move to workspace 1
for_window [class="RPG"] move to workspace 1
assign [class="godot"] 2
assign [class="qutebrowser"] 3
for_window [class="discord"] move to workspace 4
for_window [class="Steam"] move to workspace 6

#exec rm -r .cache/workspaces
